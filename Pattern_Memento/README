这个项目学习23种设计模式的备忘录模式

问题引出：
	游戏角色有攻击力和防御力，在大战 Boss 前保存自身的状态(攻击力和防御力)，当大战 Boss 后攻击力和
	防御力下降，从备忘录对象恢复到大战前的状态；
	
	方案一：采用传统的通过直接创建对象保存状态；
	问题：
		1、一个对象，就对应一个保存对象状态的对象， 这样当我们游戏的对象很多时，不利于管理，开销也
		很大.
		2、传统的方式是简单地做备份，new 出另外一个对象出来，再把需要备份的数据放到这个新对象，但
		这就暴露了对象内部的细节；
	解决方案： => 备忘录模式

备忘录模式的基本介绍：
	1、备忘录模式（Memento Pattern）在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之
	外保存这个状态。这样以后就可将该对象恢复到原先保存的状态；
	2、可以这里理解备忘录模式：现实生活中的备忘录是用来记录某些要去做的事情，或者是记录已经达成的
	共同意见的事情，以防忘记了。而在软件层面，备忘录模式有着相同的含义，备忘录对象主要用来记录一个
	对象的某种状态，或者某些数据，当要做回退时，可以从备忘录对象里获取原来的数据进行恢复操作；
	3、备忘录模式属于行为型模式；

备忘录模式的细节和注意事项：
	1、给用户提供了一种可以恢复状态的机制，可以使用户能够比较方便地回到某个历史的状态
	2、实现了信息的封装，使得用户不需要关心状态的保存细节
	3、如果类的成员变量过多，势必会占用比较大的资源，而且每一次保存都会消耗一定的内存, 这个需要注意
	4、适用的应用场景：后悔药、 打游戏时的存档、Windows 里的  ctri + z、IE中的后退、数据库的事务
	管理
	5、为了节约内存，备忘录模式可以和原型模式配合使用
