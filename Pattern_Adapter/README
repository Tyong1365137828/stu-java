这个工程用来学习23种设计模式的适配器模式(Adapter Pattern)

适配器模式的细节和注意事项：
	1、三种命名方式，是根据 src 是以怎样的形式给到 Adapter（在 Adapter 里的形式）来命名的；
	2、类适配器：以类给到，在 Adapter 里，就是将 src 当做类，继承对象适配器：以对象给到，在 Adapter 
	里，将 src 作为一个对象，持有接口适配器：以接口给到，在 Adapter 里，将 src 作为一个接口，实现；
	3、Adapter 模式最大的作用还是将原本不兼容的接口融合在一起工作；
	4、实际开发中，实现起来不拘泥于我们讲解的三种经典形式；
	

类适配器模式：
	
	类适配器模式的基本介绍：Adapter 类，通过继承 src 类，实现 dst  类接口，完成 src->dst 的适配。
	
	应用实例说明：以生活中充电器的例子来讲解适配器，充电器本身相当于 Adapter，220V 交流电相当于 
	src (即被适配者)，我们的目 dst(即 目标)是 5V 直流电；
	
	类适配器模式的细节和注意事项：
		1、Java 是单继承机制，所以类适配器需要继承 src 类这一点算是一个缺点, 因为这要求 dst 必须是
		接口，有一定局限性;
		2、src 类的方法在 Adapter 中都会暴露出来，也增加了使用的成本。
		3、由于其继承了 src 类，所以它可以根据需求重写 src 类的方法，使得 Adapter 的灵活性增强了。
		
对象适配器模式：

	对象适配器模式的基本介绍：
		1、基本思路和类的适配器模式相同，只是将 Adapter 类作修改，不是继承 src 类，而是持有 src 类
		的实例，以解决兼容性的问题。 即：持有 src 类，实现 dst  类接口，完成 src->dst 的适配；
		2、根据“合成复用原则”，在系统中尽量使用关联关系（聚合）来替代继承关系；
		3、对象适配器模式是适配器模式常用的一种；
		
	应用实例说明：以生活中充电器的例子来讲解适配器，充电器本身相当于 Adapter，220V 交流电相当于
	 src (即被适配者)，我们的目 dst(即目标)是 5V 直流电，使用对象适配器模式完成。
	 
	对象适配器模式的细节和注意事项：
		1、对象适配器和类适配器其实算是同一种思想，只不过实现方式不同。根据合成复用原则，使用组合替
		代继承， 所以它解决了类适配器必须继承 src 的局限性问题，也不再要求 dst必须是接口；
		2、使用成本更低，更灵活；
		
接口适配器模式：
	
	接口适配器模式的基本介绍：
		1、一些书籍称为：适配器模式(Default Adapter Pattern)或缺省适配器模式；
		2、核心思路：当不需要全部实现接口提供的方法时，可先设计一个抽象类实现接口，并为该接口中每个
		方法提供一个默认实现（空方法），那么该抽象类的子类可有选择地覆盖父类的某些方法来实现需求；
		3、适用于一个接口不想使用其所有的方法的情况；
		
	
	