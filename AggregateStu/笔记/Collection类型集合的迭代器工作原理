Iterable：迭代器，
	工作原理：初始调用boolean hasNext()方法，判断迭代器当前所指元素的下面是否还存在元素，如果存在返回true；反之返回false；
		此时，迭代器对象会根据hasNext()方法的返回值决定后续的执行，如果是true，就会调用next()方法；反之终止迭代；
		Object next()方法在hasNext()方法为true时被调用，其会将迭代器指向当前元素的下一个元素，然后将此时指向的元素返回出去，
		再调用boolean hasNext()方法，由hasNext()决定程序的下一执行步骤；
		
	注意点：迭代器对象获取(通过Iterator it = new Iterator())，迭代器用来遍历集合，此时相当于对当前集合的状态拍了一个快照，
		迭代器迭代时会参照这个快照进行迭代，所以，在迭代过程中，集合的结构不能发生改变(不能删除元素)，
		否则会出现异常(java.util.ConcurrentModificationException),因此如果必须要在迭代时改变集合结构(删除集合内的元素)，
		可以使用迭代器的remove(Object o)方法进行删除，这个方法会将快照和集合内的元素都删除，以保证不会出现异常；