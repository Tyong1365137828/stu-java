集合：在实际开发中大量使用，数组其实就是一个集合，集合实际上就是一个容器，可以容纳其他类型的数据；
	集合是一个容器、一个载体，可以一次容纳多个对象。
	
集合的注意：Java中集合不能存储基本数据类型，另外集合不能直接存储Java对象，集合当中存储的都是Java对象的内存地址(或者说集合中存储的是引用)，
	注意：	集合中任何时候存储的都是引用；
			集合也是一个对象，也有内存地址；
	list.add(100); // 注意，此处是应用的自动装箱，把int基本数据类型100 装箱为Integer类型；
	
	
	
Java中每个不同的集合底层会对应不同的数据结构，往不同的集合中存储元素，等于将数据放到了不同的数据结构中。

	何为数据结构？	数据存储的结构就是数据结构。不同的数据结构，数据存储方式不同，如：
		数组、二叉树、哈希表、链表、图等都是常见的数据结构；
	
	综上：往集合c1放数据，可能放到了数组上，往集合c2放数据，可能放到了二叉树上，往集合c3放数据，可能放到了哈希表上，......
		即使用不同的集合等同于使用了不同的数据结构;
		new ArrayList(); // 创建一个集合，底层是数组;
		new LinkedList(); // 创建一个集合，底层是双向链表;
		new TreeSet(); // 创建一个集合，底层是二叉树;
		......
		
		
		
Java中的集合分为两类：
	1、以单个方式存储元素
		此方式的超级父接口：java.util.Collection;
	
	2、以键值对存储元素
		此方式的超级父接口：java.util.Map;
		
		
总结(集合下的所有实现类)：
	ArrayList: 底层是数组；
	Vector: 底层是数组，只不过是线程安全的，效率较低，很少使用；
	LinkedList: 底层是双向链表；
	HashSet: 底层是HashMap，HashSet存储的数据元素相当于HashMap的key部分；
	TreeSet: 底层是TreeMap，TreeSet存储的数据元素相当于TreeMap的key部分；
	HashMap: 底层是Hash表/散列表(单向链表 + 数组)；
	Hashtable: 底层是Hash表，只不过是线程安全的，效率较低，很少使用；
	Properties: 是线程安全的并且key和value只能存储字符串String；
	TreeMap: 底层是二叉树，TreeMap集合的key可以自动按照大小顺序排序；
	
	List集合存储元素的特点：
		有序可重复；
		有序：存入的顺序和取出的顺序一样，每个元素都有下标；
		可重复：存进去1后，还能再存储1；
	Set(Map)集合存储元素的特点：
		无序不可重复；
		无序：存入的顺序和取出的顺序不一样，并且Set集合中元素没有下标；
		不可重复：存进去1，就不能再存入1了(再存储1会覆盖掉之前存储的1)；
	SortedSet(SortedMap)集合存储元素的特点：
		首先是无序不可重复的，但是SortedSet集合中的元素是可排序的；
		无序：存入的顺序和取出的顺序不一样，并且Set集合中元素没有下标；
		不可重复：存进去1，就不能再存入1了；
		可排序：可以 按照大小顺序排列；
		
	观察底层源码，Map集合的key就是一个Set集合，往Set集合中存放数据实际上放到了Map集合的key部分；
	但是注意：Map集合与Collection集合没有任何关系，仅仅是Collection类型的Set添加方法add()借用了Map类型添加元素的put()方法；
	Map集合是顶级接口，List集合(接口)和Set集合(接口)的父接口是Collection；
	具体参考img文件夹下的图片和文档；