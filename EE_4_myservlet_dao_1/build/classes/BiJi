一、servlet验证的3个基本步骤：
1、接收参数	2、验证	3、跳转



二、路径问题：
1、绝对路径：以HTTP开头，包括ip地址，端口，路径等，访问资源的全部信息，
可以访问互联网(所有服务器)上的所所有资源(例如：http://.........)
格式：协议/服务器名/端口号/项目名(上下文名)/下面的文件夹等，包括servlet

2、根路径：以/开始，后接上下文路径开始写，省略了IP地址，端口号，只能访问当前服务器上的所有项目
格式：/项目名/........

3、相对路径1：相对于自身，可以访问当前服务器上的所有资源
注意：(相对于起始的文件)同级直接写，开头不用加"/"，但是不是同一级的切换后要加"/"；	
.表示返回自身的父级；	..表示父级的父级

4、相对路径2：相对于基准路径basePath，可以访问当前项目的资源
在<%@ page %>标签下加入代码：
<%
	String path = request.getContextPath();	//表示获取上下文路径(即项目名)
	String basePath = request.getScheme()(表示协议) + "://"
	+ request.getServerName()(表示服务器名) + ":" + request.getServerPort()(端口号)
	+ path(即上述的path，表示上下文路径)+"/";
%>
然后在<head>标签里加入代码：
	<base href="<%=basePath>">
最后即可加入要访问项目的资源文件(注意开头没有"/")



三、目录的选择：
1、访问其他服务器资源，只能选择绝对路径
2、访问当前服务器的其他项目资源，绝对，根，相对路径1都可以，但建议使用根路径
3、访问当前项目的当前资源，建议使用相对路径2(基准路径)



四、错误总结：
1、web项目连接数据库操作时，数据库的jar包最后在该项目的lib文件夹下进行粘贴，否则当进行数据库操作时会出现
500状态码(表示代码错误，但其实代码没有错)

2、一般项目可以用常规方法右击工程，点击properties后选择Add External JARs选择mysql.jar包即可

3、使用注解方式运行servlet文件时注解的值与from标签的action值有关联，但是也有不同，from标签的action值起始不是"/"，而注解的值有"/"，如果
两者没有使用对会出现404错误

4、加载驱动时，即Class.forName("com.mysql.jdbc.Driver");如果mysql版本新，应该在"mysql"后，".jdbc"之前加入".cj"
否则无法加载驱动

5、连接数据库获取jdbc时，
即connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/数据库名", "root", "密码");
如果mysql版本新，受时区不同影响，应该在数据库名后加"?serverTimezone=UTC"，否则不能连接数据库



五、session技术的使用和适用
session技术，用于重定向(俩次请求)，需要共享资源时使用；转发时不必使用session技术



六、span标签和div标签的使用



七、心得
标签中，id名既是在前端进行验证的标签名，name名既是在后端验证的标签名