<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 注意有次序之分，properties最先 -->
	<properties resource="db.properties" /><!-- 属性文件db.properties，内含数据库驱动、名字、账号、密码等信息，用于以下的获取 -->
	<typeAliases><!-- 对类起别名，用于在sql操作时替代输入类型和输出类型是要替代类的名字 -->
		<!-- <typeAlias type="edu.hebeu.po.WebUser" alias="TestUser"/> --><!-- 对该类起别名 -->
		<package name="edu.hebeu.po" /><!-- 用扫描包的方法，直接把该包下的全部实体类默认为本身的小写(第一个字母小写，其余不变)如WebUser变为 -->
	</typeAliases>
	
	<environments default="development">
		<!--环境 -->
		<environment id="development">
			<!-- 使用jdbc事务管理,事务控制由mymatis负责 -->
			<transactionManager type="JDBC" />
			<!-- 数据源,数据库连接池，由mybatis管理 -->
			<dataSource type="POOLED">
				<!--加载驱动 -->
				<property name="driver" value="${jdbc.drive}" />
				<!--加载数据库 -->
				<property name="url" value="${jdbc.url}" />
				<!--账户 -->
				<property name="username" value="${jdbc.username}" />
				<!--密码 -->
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!--映射，可以定义多个mappers,可见每个mappers对应一个所查询的表(各类用户，如教师、学生等) -->
	<mappers>
		<package name="edu.hebeu.dao" /> <!-- 扫描包的方法，直接写到包名即可，其下的所有xml都会被加载，最常用的写法 -->
	</mappers>
</configuration>