这个项目演示7大原则的里氏替换原则

面向对象编程(IOO)中的继承性的思考和说明：
	1、继承包含这样一层含义，父类中凡是已经实现好的方法，实际上是在设有规定和契约，虽然它不强制要
	求所有的子类必须遵守这些锲约，但是如果子类对这些已经实现的方法任意修改，就会对整个继承体系造成
	破坏；
	2、继承在给程序设计带来便利的同时，也带来了弊端，如使用继承会给程序带来侵入性，程序的可移植性
	降低，增加对象间的耦合性，如果一个类被其它类所继承，则当这个类需要修改时，必须考虑到所有的子
	类，并且父类修改后，所有涉及到子类的功能都有可能产生故障；
	3、提出问题：在编程中如何正确的使用继承？ => 里氏替换原则

基本介绍：里氏替换原则就是指：在编程中如何正确的使用继承：
	1、于1988年，由麻省理工的姓里的一位女士提出；
	2、如果对每个类型为T1的对象o1，都有类型为T2的对象o2，使得以T1定义的所有程序P在所有的对象o1都
	替换成o2时，程序P的行为没有发生改变，那么类型T2是类型T1的子类型，换句话说，所有引用基类的地方
	必须能透明的使用其子类的对象；
	3、使用继承时，遵循里氏替换原则，在子类中尽量不要重写父类的方法；
	4、里氏替换原则告诉我们,继承实际上让多个类的耦合性增强了,在适当情况下可以通过聚合,组合,依赖来
	解决问题，通用做法是：原来的父类和子类都继承一个更通俗的基类，原有的继承关系去掉，采用依赖、
	组合、聚合关系代替；