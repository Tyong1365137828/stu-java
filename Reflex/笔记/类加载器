关于JDK自带的类加载器：ClassLoader
	类加载器时专门负责加载类的命令或工具；
	
	JDK中自带3个类加载器：
		启动类加载器：jre下的 lib/rt.jar；
		扩展类加载器：jre下的 lib/ext/*.jar；
		应用类加载器：classpath；
		
	假设有一行代码：String s = "abcd";
		代码开始执行之前，会将所需要类全部加载到JVM中；
		通过类加载器加载，看到以上代码类加载器会找String.class文件，找到就加载，如何进行加载？如下：
			
			首先通过"启动类加载器"加载
				须知："启动类加载器"专门加载：jre下的 lib/rt.jar 文件，rt.jar中都是JDK最核心的类库；
				
			如果"启动类加载器"加载不到时，会通过"扩展类加载器"加载
				须知："扩展类加载器"专门加载：jre下的 lib/ext/*.jar；
				
			如果"扩展类加载器"加载不到时，会通过"应用类加载器"加载
				须知："应用类加载器"专门加载：jre下的 classpath中(环境变量内的classpath)的jar包(class文件)；
				
		
	
	双亲委派机制：
		Java中为了保证类加载的安全，使用了双亲委派机制。优先从"启动类加载器"中加载，这个称为"父"；
		"父"无法加载到时，会从"扩展类加载器"中加载，这个称为"母"。双亲委派，如果都加载不到，才会考虑从
		"应用类加载器"中加载，直到加载到为止；