动态代理：
    特点：字节码随用随创建，随用随代理;
    作用：不修改源码的基础上对方法增强;
    分类：
        基于接口的动态代理;
        基于子类的动态代理;


基于接口的动态代理：
    涉及的类：Proxy(JDK官方提供);
    如何创建代理对象：
        使用Proxy中的newProxyInstance()方法
    创建代理对象的要求：
        被代理的类最少实现一个接口，如果没有则不能使用;
    方法：
        newProxyInstance()方法：
            参数：
                参数1、ClassLoader   类加载器
                    用于加载代理对象字节码的，写的是被代理对象加载器(和被代理对象使用相同的类加载器)，固定写法;
                参数2、Class[]    字节码数组
                    用于让代理对象和被代理对象有相同的方法(代理谁)，固定写法;
                参数3、InvocationHandler    用于提供增强的代码
                    用于提供增强的代码(即如何代理，我们一般写一个该接口的实现类，通常情况下是匿名内部类，但不是必须的)，
                    此接口的实现类都是谁用谁写;