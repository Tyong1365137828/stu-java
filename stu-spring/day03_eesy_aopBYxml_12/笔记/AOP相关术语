JoinPoint(连接点)：
    所谓连接点是指哪些被拦截到的点，在Spring中，这些点指的是方法，因为Spring只支持方法类型的连接点;
    可以简单的将Service层的每个方法看作一个连接点;
PointCut(切入点)：
    所谓切入点 是指我们对哪些JoinPoint进行拦截的定义
    可以简单的将通过动态代理增强后的每个方法(连接点)看作一个 切入点;
小总结：所有的切入点都一定是连接点;但是连接点不一定都是切入点;

Advice(通知/增强)：
    所谓通知是指拦截到JoinPoint之后 所要做的事情就是通知(如上个例子的 TransactionManager 就是通知);
    通知的类型：前置通知、后置通知、异常通知、最终通知、环绕通知();
Introduction(引介)：
    引介是一种特殊的通知，在不修改类代码的前提下，Introduction可以在运行期为类动态的添加以下方法或Field;
Target(目标对象)：
    代理的目标对象，即被代理对象;
Weaving(织入)：
    是指把增强应用到目标对象来创建新的代理对象的过程;
    Spring采用动态代理来织入，而AspectJ采用编译器织入和类装载期织入;
Proxy(代理)：
    一个类被Aop织入增强后，就产生一个结果代理类;
Aspect(切面)：
    是切入点和通知(介入) 的结合;