切入点表达式的写法：
    关键字：execution(表达式)
    表达式：
        访问修饰符 返回值 全限定类名(包含包名的全限定类名).方法名(参数列表 )

标准写法：
    execution(public void 全限定类名.要增强的方法名(参数列表))
访问修饰符可以省略：
    execution(void 全限定类名.要增强的方法名(参数列表))
返回值可以使用通配符，表示任意返回值：
    execution(* 全限定类名.要增强的方法名(参数列表))
包名可以使用通配符，表示任意包(注意：有几级包，就要写几个*)：
    execution(* *.*.*.类名.要增强的方法名(参数列表))
包名可以使用 .. 表示当前包及其子包：
    execution(* *..类名.要增强的方法名(参数列表))
类名和方法名都可以使用 * 来实现通配：
    execution(* *..*.要增强的方法名(参数列表)) // 类名使用 * 通配
    execution(* *..*.*(参数列表)) // 类名和方法名都使用 * 通配
参数列表：
    可以直接写数据类型;
        基本类型直接写名称(如：int);
        引用类型写 类型的全限定类名(如：java.lang.String);
        参数类型可以使用通配符(但是注意：必须要有参数)
        可以使用 .. 表示有无参数均可，有参数可以是任意类型
全通配写法：
    execution(* *..*.*(..))

实际开发中切入点表达式的通常写法：
    切到业务层实现类的所有方法：
        execution(* edu.hebeu.service.impl.*.*(..))